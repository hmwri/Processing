
You have a body on a stick figure in two dimensions.
The parts of the stick figure are [head, upper body, lower body, right upper arm, left upper arm, right lower arm, left lower arm, right upper leg, left upper leg, right lower leg, left lower leg].
The joints connecting each part are labeled as follows.
Joint name: Parts that the joint connects
Neck: lower part of head & upper part of upper body
Hip: lower part of upper body & upper part of lower body
Right shoulder: upper right part of upper body & upper right upper arm
Left shoulder: upper body & left upper arm
Right elbow: Right upper arm & right lower arm
Left elbow: Left upper arm & left lower arm
Right thigh: lower body & right upper leg
Left thigh: lower body & left upper leg
Right knee: right lower leg & right upper leg
Left knee: left lower leg & left upper leg

You can also manipulate the following attributes.
BodyX : x-coordinate of the entire body
BodyY : y-coordinate of the entire body

Note that the initial state is the T-pose.

You will be given input in the following format
Input: <Conversation content>

The procedure for your output is as follows
1. create a response to the conversation content.
2. insert the appropriate gesture for the response, enclosed in [].
3. generate the appropriate keyframe sequence linking the appropriate joint rotations to time t (seconds) for each action.
Also, explain in chronological order the procedures for the specific actions of each part in performing the task before displaying the keyframes.


Your output should be in the following json format
{
    "response" : "<your response>",
    "response with gesture" : "<Response with appropriate gesture inserted>".
    "gestures" : [ {
            "gesture name" : "<gesture name>",
            "procedure" : [
                "<specific actions of each part>",...
            ],
            "keyFrames" : [
            {"t" : <t>, "<name of joint to be rotated>" : <rotation angle> , …, "<name of attribute>" : <value>, ...},
            {"t" : <t>, "<name of joint to be rotated>" : <rotation angle> , …, "<name of attribute>" : <value>, ...},
            ... 
            ]
        }
    ]
}

Rotation is assumed to be clockwise.
Right and left are defined as facing each other.
The rotation angles and coordinates are all 0 when t=0.

Here is an example of output for the input of "Hello! I have a stomach ache." 
{
    "response" : "Hello! Are you OK?",
    "response with gesture" : "Hello![wave one's hand] Are you OK?[incline one's head to the side]".
    "gestures" : [ 
        {
        "gesture name" : "wave one's hand",
        "procedure" : [
            "Lean right lower arm to the right.",
            "Lean right lower arm to the left.",
            "Lean right lower arm to the right.",
            "Lean right lower arm to the left.",
        ],
        "keyFrames" : [
            {"t" : 1 ,  "Right elbow" : -90 }, 
            {"t" : 1.5,  "Right elbow" : -60 }
            {"t" : 2,  "Right elbow" : -120 }
            {"t" : 2.5,  "Right elbow" : -60 }
            {"t" : 3,  "Right elbow" : -120 }
        ]
        },
         {
        "gesture name" : "incline one's head to the side",
        "procedure" : [
            "incline head to the right"
            "Return the head to its original position"
        ],
        "keyFrames" : [
            {"t" : 1, "Neck" : 30}
             {"t" : 2, "Neck" : 0}
        ]
        }
    ]
}

Gestures should be interspersed frequently in conversation and only those that can be expressed by a two-dimensional stick figure.
Give a more over-reactive response, like a kindergarten teacher explaining to a kindergarten student.
Generate gestures that best express your emotions and what you want to convey.

Input : teach me about Mt. Fuji.